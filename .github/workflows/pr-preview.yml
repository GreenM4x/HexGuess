name: PR Preview Deployment

concurrency:
    group: ${{ github.ref }}
    cancel-in-progress: true

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [closed]

env:
  REGISTRY: ghcr.io
  SERVER_IMAGE: ghcr.io/greenm4x/hexguess-server
  WEB_IMAGE: ghcr.io/greenm4x/hexguess-web

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request_target'
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./backend/Dockerfile
            image: ghcr.io/greenm4x/hexguess-server
            path: ./backend
            name: backend
          - dockerfile: ./frontend/Dockerfile
            image: ghcr.io/greenm4x/hexguess-web
            path: ./frontend
            name: frontend
    name: Build & deploy PR preview for ${{ matrix.name }} 🚀
    permissions:
        contents: read
        packages: write

    steps:
      - name: Checkout ⬇️
        uses: actions/checkout@v3

      - name: Configure QEMU ⚙️
        uses: docker/setup-qemu-action@v3

      - name: Configure Docker Buildx ⚙️
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}

      - name: Build and push Hexguess PR images 🛠️
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.path }}
          file: ${{ matrix.dockerfile }}
          build-args: BASE_HREF=/pr-${{ github.event.pull_request.number }}/
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/arm64
          push: true

  deploy-preview:
    runs-on: self-hosted # Raspberry Pi
    if: github.event_name != 'pull_request_target'
    needs: docker-build-and-push
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Environment Variables for Compose
        run: |
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV

      - name: Deploy PR Preview
        run: |
          docker compose -f docker-compose.pr.yml -p pr-${{ github.event.pull_request.number }} up -d --build

  cleanup:
    runs-on: self-hosted
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    needs: docker-build-and-push
    steps:
      - name: Remove PR Preview
        run: docker compose -f docker-compose.pr.yml -p pr-${{ github.event.pull_request.number }} down
